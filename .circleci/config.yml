# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  sonar-scan:
    docker:
      - image: cimg/python:3.10.4
    steps:
      - checkout
      - run:
          name: Build
          command: |
            wget https://launchpad.net/gcc-arm-embedded/4.7/4.7-2013-q3-update/+download/gcc-arm-none-eabi-4_7-2013q3-20130916-linux.tar.bz2 -P /tmp
            tar -C /tmp -xjf /tmp/gcc-arm-none-eabi-4_7-2013q3-20130916-linux.tar.bz2
            export PATH=$PATH:/tmp/gcc-arm-none-eabi-4_7-2013q3/bin
            pip3 install pillow libclang-py3 pyqt5
            sudo apt-get update -y
            sudo apt-get install -y libclang-6.0-dev
            curl -L -O https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
            unzip -o build-wrapper-linux-x86.zip
            build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw_output ./tools/commit-tests.sh -Wno-error
      - sonarcloud/scan

  build-elrsv2:
    machine:
      image: ubuntu-2004:202111-02
    steps:
      - checkout
      - run: |
          wget https://launchpad.net/gcc-arm-embedded/4.7/4.7-2013-q3-update/+download/gcc-arm-none-eabi-4_7-2013q3-20130916-linux.tar.bz2 -P /tmp
          tar -C /tmp -xjf /tmp/gcc-arm-none-eabi-4_7-2013q3-20130916-linux.tar.bz2
          export PATH=$PATH:/tmp/gcc-arm-none-eabi-4_7-2013q3/bin
          pip3 install pillow libclang-py3 pyqt5
          sudo apt-get update
          sudo apt-get install -y libclang-6.0-dev
          python3 ./tools/build-flysky.py -bI6X-ELRSV2 -tALL /home/circleci/project/
      - store_artifacts:
          path: output

  build-heli:
    machine:
      image: ubuntu-2004:202111-02
    steps:
      - checkout
      - run: |
          wget https://launchpad.net/gcc-arm-embedded/4.7/4.7-2013-q3-update/+download/gcc-arm-none-eabi-4_7-2013q3-20130916-linux.tar.bz2 -P /tmp
          tar -C /tmp -xjf /tmp/gcc-arm-none-eabi-4_7-2013q3-20130916-linux.tar.bz2
          export PATH=$PATH:/tmp/gcc-arm-none-eabi-4_7-2013q3/bin
          pip3 install pillow libclang-py3 pyqt5
          sudo apt-get update
          sudo apt-get install -y libclang-6.0-dev
          python3 ./tools/build-flysky.py -bI6X-HELI -tALL /home/circleci/project/
      - store_artifacts:
          path: output

  build-std:
    machine:
      image: ubuntu-2004:202111-02
    steps:
      - checkout
      - run: |
          wget https://launchpad.net/gcc-arm-embedded/4.7/4.7-2013-q3-update/+download/gcc-arm-none-eabi-4_7-2013q3-20130916-linux.tar.bz2 -P /tmp
          tar -C /tmp -xjf /tmp/gcc-arm-none-eabi-4_7-2013q3-20130916-linux.tar.bz2
          export PATH=$PATH:/tmp/gcc-arm-none-eabi-4_7-2013q3/bin
          pip3 install pillow libclang-py3 pyqt5
          sudo apt-get update
          sudo apt-get install -y libclang-6.0-dev
          python3 ./tools/build-flysky.py -bI6X-STD -tALL /home/circleci/project/
      - store_artifacts:
          path: output

  build-en:
    machine:
      image: ubuntu-2004:202111-02
    steps:
      - checkout
      - run: |
          wget https://launchpad.net/gcc-arm-embedded/4.7/4.7-2013-q3-update/+download/gcc-arm-none-eabi-4_7-2013q3-20130916-linux.tar.bz2 -P /tmp
          tar -C /tmp -xjf /tmp/gcc-arm-none-eabi-4_7-2013q3-20130916-linux.tar.bz2
          export PATH=$PATH:/tmp/gcc-arm-none-eabi-4_7-2013q3/bin
          pip3 install pillow libclang-py3 pyqt5
          sudo apt-get update
          sudo apt-get install -y libclang-6.0-dev
          python3 ./tools/build-flysky.py -bI6X-ELRSV2 -bI6X-HELI -bI6X-STD -tEN /home/circleci/project/
      - store_artifacts:
          path: output

#  publish-github-release:
#    docker:
#      - image: cibuilds/github:0.13
#    steps:
#      - attach_workspace:
#          at: /tmp
#      - run:
#          name: "Publish Release on GitHub"
#          command: |
#            ls -la
#            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete nightly-latest $CIRCLE_ARTIFACTS/

orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.3

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  openi6x-release-workflow:
    jobs:
      - sonar-scan:
          context: SonarCloud
      - build-en:
          filters:
            branches:
              ignore:
                - master
      - build-elrsv2:
          filters:
            branches:
              only:
                - master
      - build-heli:
          filters:
            branches:
              only:
                - master
      - build-std:
          filters:
            branches:
              only:
                - master
#      - publish-github-release:
##          filters:
##            branches:
##              only: master
#          requires:
#            - build-elrsv2
#            - build-gvars
#            - build-heli
